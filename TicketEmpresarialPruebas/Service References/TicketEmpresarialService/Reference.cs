//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketEmpresarialPruebas.TicketEmpresarialService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardBalanceAssignmentRequest", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities.Request")]
    [System.SerializableAttribute()]
    public partial class CardBalanceAssignmentRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceDTO[] CardBalanceDTOListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.SecurityDTO SecurityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceDTO[] CardBalanceDTOList {
            get {
                return this.CardBalanceDTOListField;
            }
            set {
                if ((object.ReferenceEquals(this.CardBalanceDTOListField, value) != true)) {
                    this.CardBalanceDTOListField = value;
                    this.RaisePropertyChanged("CardBalanceDTOList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.SecurityDTO Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityDTO", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities")]
    [System.SerializableAttribute()]
    public partial class SecurityDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ExternalClientIdField;
        
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ExternalClientId {
            get {
                return this.ExternalClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalClientIdField, value) != true)) {
                    this.ExternalClientIdField = value;
                    this.RaisePropertyChanged("ExternalClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardBalanceDTO", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TicketEmpresarialPruebas.TicketEmpresarialService.CardDetailDTO))]
    public partial class CardBalanceDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorizationNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string AuthorizationNumber {
            get {
                return this.AuthorizationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationNumberField, value) != true)) {
                    this.AuthorizationNumberField = value;
                    this.RaisePropertyChanged("AuthorizationNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardDetailDTO", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities")]
    [System.SerializableAttribute()]
    public partial class CardDetailDTO : TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.CardStatusDTO CardStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardStatusDTO CardStatus {
            get {
                return this.CardStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CardStatusField, value) != true)) {
                    this.CardStatusField = value;
                    this.RaisePropertyChanged("CardStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string CardName {
            get {
                return this.CardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNameField, value) != true)) {
                    this.CardNameField = value;
                    this.RaisePropertyChanged("CardName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardStatusDTO", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities")]
    [System.SerializableAttribute()]
    public partial class CardStatusDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities.Response")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAdjustmentResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAssignmentResponse))]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.ErrorDTO[] ErrorListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public TicketEmpresarialPruebas.TicketEmpresarialService.ErrorDTO[] ErrorList {
            get {
                return this.ErrorListField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorListField, value) != true)) {
                    this.ErrorListField = value;
                    this.RaisePropertyChanged("ErrorList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardBalanceAdjustmentResponse", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities.Response")]
    [System.SerializableAttribute()]
    public partial class CardBalanceAdjustmentResponse : TicketEmpresarialPruebas.TicketEmpresarialService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceDTO[] CardBalanceDTOListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceDTO[] CardBalanceDTOList {
            get {
                return this.CardBalanceDTOListField;
            }
            set {
                if ((object.ReferenceEquals(this.CardBalanceDTOListField, value) != true)) {
                    this.CardBalanceDTOListField = value;
                    this.RaisePropertyChanged("CardBalanceDTOList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardGetListResponse", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities.Response")]
    [System.SerializableAttribute()]
    public partial class CardGetListResponse : TicketEmpresarialPruebas.TicketEmpresarialService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.CardDetailDTO[] CardListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.PagingDTO PagingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardDetailDTO[] CardList {
            get {
                return this.CardListField;
            }
            set {
                if ((object.ReferenceEquals(this.CardListField, value) != true)) {
                    this.CardListField = value;
                    this.RaisePropertyChanged("CardList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.PagingDTO Paging {
            get {
                return this.PagingField;
            }
            set {
                if ((object.ReferenceEquals(this.PagingField, value) != true)) {
                    this.PagingField = value;
                    this.RaisePropertyChanged("Paging");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardBalanceAssignmentResponse", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities.Response")]
    [System.SerializableAttribute()]
    public partial class CardBalanceAssignmentResponse : TicketEmpresarialPruebas.TicketEmpresarialService.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceDTO[] CardBalanceDTOListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceDTO[] CardBalanceDTOList {
            get {
                return this.CardBalanceDTOListField;
            }
            set {
                if ((object.ReferenceEquals(this.CardBalanceDTOListField, value) != true)) {
                    this.CardBalanceDTOListField = value;
                    this.RaisePropertyChanged("CardBalanceDTOList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorDTO", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities")]
    [System.SerializableAttribute()]
    public partial class ErrorDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint TypeErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint TypeError {
            get {
                return this.TypeErrorField;
            }
            set {
                if ((this.TypeErrorField.Equals(value) != true)) {
                    this.TypeErrorField = value;
                    this.RaisePropertyChanged("TypeError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingDTO", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities")]
    [System.SerializableAttribute()]
    public partial class PagingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool All {
            get {
                return this.AllField;
            }
            set {
                if ((this.AllField.Equals(value) != true)) {
                    this.AllField = value;
                    this.RaisePropertyChanged("All");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageRecords {
            get {
                return this.PageRecordsField;
            }
            set {
                if ((this.PageRecordsField.Equals(value) != true)) {
                    this.PageRecordsField = value;
                    this.RaisePropertyChanged("PageRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecords {
            get {
                return this.TotalRecordsField;
            }
            set {
                if ((this.TotalRecordsField.Equals(value) != true)) {
                    this.TotalRecordsField = value;
                    this.RaisePropertyChanged("TotalRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardBalanceAdjustmentRequest", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities.Request")]
    [System.SerializableAttribute()]
    public partial class CardBalanceAdjustmentRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceDTO[] CardBalanceDTOListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.SecurityDTO SecurityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceDTO[] CardBalanceDTOList {
            get {
                return this.CardBalanceDTOListField;
            }
            set {
                if ((object.ReferenceEquals(this.CardBalanceDTOListField, value) != true)) {
                    this.CardBalanceDTOListField = value;
                    this.RaisePropertyChanged("CardBalanceDTOList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.SecurityDTO Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardGetListRequest", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities.Request")]
    [System.SerializableAttribute()]
    public partial class CardGetListRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListFilter FilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilterValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.PagingDTO PagingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TicketEmpresarialPruebas.TicketEmpresarialService.SecurityDTO SecurityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListFilter Filter {
            get {
                return this.FilterField;
            }
            set {
                if ((this.FilterField.Equals(value) != true)) {
                    this.FilterField = value;
                    this.RaisePropertyChanged("Filter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilterValue {
            get {
                return this.FilterValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterValueField, value) != true)) {
                    this.FilterValueField = value;
                    this.RaisePropertyChanged("FilterValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.PagingDTO Paging {
            get {
                return this.PagingField;
            }
            set {
                if ((object.ReferenceEquals(this.PagingField, value) != true)) {
                    this.PagingField = value;
                    this.RaisePropertyChanged("Paging");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TicketEmpresarialPruebas.TicketEmpresarialService.SecurityDTO Security {
            get {
                return this.SecurityField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityField, value) != true)) {
                    this.SecurityField = value;
                    this.RaisePropertyChanged("Security");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardGetListFilter", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities")]
    public enum CardGetListFilter : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByEmployerId = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByCardNumber = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestRequestDTO", Namespace="http://schemas.datacontract.org/2004/07/ERMX.SSOServices.TE.Entities")]
    [System.SerializableAttribute()]
    public partial class TestRequestDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:ERMX.Services", ConfigurationName="TicketEmpresarialService.ITEService")]
    public interface ITEService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ERMX.Services/ITEService/CardBalanceAssignment", ReplyAction="urn:ERMX.Services/ITEService/CardBalanceAssignmentResponse")]
        TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAssignmentResponse CardBalanceAssignment(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ERMX.Services/ITEService/CardBalanceAssignment", ReplyAction="urn:ERMX.Services/ITEService/CardBalanceAssignmentResponse")]
        System.Threading.Tasks.Task<TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAssignmentResponse> CardBalanceAssignmentAsync(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ERMX.Services/ITEService/CardBalanceAdjustment", ReplyAction="urn:ERMX.Services/ITEService/CardBalanceAdjustmentResponse")]
        TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAdjustmentResponse CardBalanceAdjustment(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAdjustmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ERMX.Services/ITEService/CardBalanceAdjustment", ReplyAction="urn:ERMX.Services/ITEService/CardBalanceAdjustmentResponse")]
        System.Threading.Tasks.Task<TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAdjustmentResponse> CardBalanceAdjustmentAsync(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAdjustmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ERMX.Services/ITEService/CardGetList", ReplyAction="urn:ERMX.Services/ITEService/CardGetListResponse")]
        TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListResponse CardGetList(TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ERMX.Services/ITEService/CardGetList", ReplyAction="urn:ERMX.Services/ITEService/CardGetListResponse")]
        System.Threading.Tasks.Task<TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListResponse> CardGetListAsync(TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ERMX.Services/ITEService/TestToConsume", ReplyAction="urn:ERMX.Services/ITEService/TestToConsumeResponse")]
        TicketEmpresarialPruebas.TicketEmpresarialService.BaseResponse TestToConsume(TicketEmpresarialPruebas.TicketEmpresarialService.TestRequestDTO request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ERMX.Services/ITEService/TestToConsume", ReplyAction="urn:ERMX.Services/ITEService/TestToConsumeResponse")]
        System.Threading.Tasks.Task<TicketEmpresarialPruebas.TicketEmpresarialService.BaseResponse> TestToConsumeAsync(TicketEmpresarialPruebas.TicketEmpresarialService.TestRequestDTO request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITEServiceChannel : TicketEmpresarialPruebas.TicketEmpresarialService.ITEService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TEServiceClient : System.ServiceModel.ClientBase<TicketEmpresarialPruebas.TicketEmpresarialService.ITEService>, TicketEmpresarialPruebas.TicketEmpresarialService.ITEService {
        
        public TEServiceClient() {
        }
        
        public TEServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TEServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TEServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TEServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAssignmentResponse CardBalanceAssignment(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAssignmentRequest request) {
            return base.Channel.CardBalanceAssignment(request);
        }
        
        public System.Threading.Tasks.Task<TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAssignmentResponse> CardBalanceAssignmentAsync(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAssignmentRequest request) {
            return base.Channel.CardBalanceAssignmentAsync(request);
        }
        
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAdjustmentResponse CardBalanceAdjustment(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAdjustmentRequest request) {
            return base.Channel.CardBalanceAdjustment(request);
        }
        
        public System.Threading.Tasks.Task<TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAdjustmentResponse> CardBalanceAdjustmentAsync(TicketEmpresarialPruebas.TicketEmpresarialService.CardBalanceAdjustmentRequest request) {
            return base.Channel.CardBalanceAdjustmentAsync(request);
        }
        
        public TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListResponse CardGetList(TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListRequest request) {
            return base.Channel.CardGetList(request);
        }
        
        public System.Threading.Tasks.Task<TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListResponse> CardGetListAsync(TicketEmpresarialPruebas.TicketEmpresarialService.CardGetListRequest request) {
            return base.Channel.CardGetListAsync(request);
        }
        
        public TicketEmpresarialPruebas.TicketEmpresarialService.BaseResponse TestToConsume(TicketEmpresarialPruebas.TicketEmpresarialService.TestRequestDTO request) {
            return base.Channel.TestToConsume(request);
        }
        
        public System.Threading.Tasks.Task<TicketEmpresarialPruebas.TicketEmpresarialService.BaseResponse> TestToConsumeAsync(TicketEmpresarialPruebas.TicketEmpresarialService.TestRequestDTO request) {
            return base.Channel.TestToConsumeAsync(request);
        }
    }
}
